name: CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main
      
jobs:
  build:
    name: build-and-analyze
    runs-on: ubuntu-latest
    
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0


    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Lint frontend
      run: npm run lint
      working-directory: ./frontend

    - name: Test frontend
      run: npm test -- --watchAll=false --passWithNoTests
      working-directory: ./frontend

    - name: Build frontend
      run: npm run build
      working-directory: ./frontend

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run Checkstyle
      run: mvn -f backend/pom.xml checkstyle:check
      
    - name: SonarCloud Scan
      run: |
        mvn -f backend/pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=NUS-ISS-Team-2_sellr \
          -Dsonar.organization=nus-iss-team-2 \
          -Dsonar.sources=frontend/src,backend/src \
          -Dsonar.tests=frontend/src,backend/src \
          -Dsonar.exclusions=node_modules/**,build/**,**/target/** \
          -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info \
          -Dsonar.login=$SONAR_TOKEN